# Name: alarm_system.yaml
# Author: Sebastian Sopola @ https://www.linkedin.com/in/sebastiansopola/
# Description: This file contains the automations to provide alarm message portal through UI and notify upon left doors open, etc.
#
# Warning: Correct entity formatting is important otherwise automations will run into errors!



# ------------------------------------------------
# - Notify All Users Of Any Emergency Through UI -
# ------------------------------------------------
- id: notify_all_with_alarm_message
  alias: Notify All Users In The Household of Any Emergency
  trigger:
    - platform: state
      entity_id: input_button.send_alarm_message
  condition:
    # Step 1: Ensure alarm message body is populated
    - condition: template
      value_template: "{{ states('input_text.alarm_message_body') != '' }}"
  action:
    # Step 2: Read input_text.alarm_message_title & input_text.alarm_message_body
    - variables:
        alarm_title: "{{ states('input_text.alarm_message_title') }}"
        alarm_body: "{{ states('input_text.alarm_message_body') }}"
    # Step 3: Call the script and pass variables
    - service: script.notify_all
      data:
        title: "{{ alarm_title }}"
        message: "{{ alarm_body }}"
    # Step 4: Clean title and body entities
    - service: input_text.set_value
      data:
        value: ""
      target:
        entity_id:
          - input_text.alarm_message_title
          - input_text.alarm_message_body








# -
# -
# -
- id: door_open_message
  alias: Door Open Message
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.takaovi_door
    - binary_sensor.etuovi_door
    to: 'on'
    for: 00:02:00
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.system_alarms
        state: 'off'
      - condition: time
        after: 09:00:00
        before: '22:00:00'
      - condition: template
        value_template: '{{ is_state(''device_tracker.sebastians_iphone'', ''home'') or
          is_state(''device_tracker.iphone_isabel'', ''home'') or is_state(''device_tracker.iphone_simo'',
          ''home'') }}'
      sequence:
      - service: notify.mobile_app_sebastians_iphone
        data:
          title: Kuka unohti oven auki?
          message: "{{ now().strftime('%H:%M:%S %d-%m-%Y') }} - {% if is_state('binary_sensor.takaovi_door','on')
            and is_state('binary_sensor.etuovi_door', 'on') %}\n Molemmat ulko-ovet
            on auki. Käy sulkemassa!\n {% elif is_state('binary_sensor.takaovi_door','on')
            %}\n Takaovi on auki. Käy sulkemassa!\n {% elif is_state('binary_sensor.etuovi_door','on')
            %}\n Etuovi on auki. Käy sulkemassa!\n {% endif %}\n"
      - service: notify.mobile_app_iphone_isabel
        data:
          title: Kuka unohti oven auki?
          message: "{{ now().strftime('%H:%M:%S %d-%m-%Y') }} - {% if is_state('binary_sensor.takaovi_door','on')
            and is_state('binary_sensor.etuovi_door', 'on') %}\n Molemmat ulko-ovet
            on auki. Käy sulkemassa!\n {% elif is_state('binary_sensor.takaovi_door','on')
            %}\n Takaovi on auki. Käy sulkemassa!\n {% elif is_state('binary_sensor.etuovi_door','on')
            %}\n Etuovi on auki. Käy sulkemassa!\n {% endif %}\n"
      - service: notify.mobile_app_iphone_simo
        data:
          title: Kuka unohti oven auki?
          message: "{{ now().strftime('%H:%M:%S %d-%m-%Y') }} - {% if is_state('binary_sensor.takaovi_door','on')
            and is_state('binary_sensor.etuovi_door', 'on') %}\n Molemmat ulko-ovet
            on auki. Käy sulkemassa!\n {% elif is_state('binary_sensor.takaovi_door','on')
            %}\n Takaovi on auki. Käy sulkemassa!\n {% elif is_state('binary_sensor.etuovi_door','on')
            %}\n Etuovi on auki. Käy sulkemassa!\n {% endif %}\n"
      - service: button.press
        entity_id: button.temperature_sensor_zigbee_bridge_ha_test_alarm
      - delay: 00:00:30
      - service: button.press
        entity_id: button.temperature_sensor_zigbee_bridge_ha_stop_alarm
    default:
    - service: notify.mobile_app_sebastians_iphone
      data:
        title: Kuka unohti oven auki?
        message: "{{ now().strftime('%H:%M:%S %d-%m-%Y') }} - {% if is_state('binary_sensor.takaovi_door',
          'on') and is_state('binary_sensor.etuovi_door', 'on') %}\n  Molemmat ulko-ovet
          on auki. Käy sulkemassa!\n {% elif is_state('binary_sensor.takaovi_door',
          'on') %}\n  Takaovi on auki. Käy sulkemassa!\n {% elif is_state('binary_sensor.etuovi_door',
          'on') %}\n  Etuovi on auki. Käy sulkemassa!\n {% endif %}\n"
    - service: notify.mobile_app_iphone_isabel
      data:
        title: Kuka unohti oven auki?
        message: "{{ now().strftime('%H:%M:%S %d-%m-%Y') }} - {% if is_state('binary_sensor.takaovi_door',
          'on') and is_state('binary_sensor.etuovi_door', 'on') %}\n  Molemmat ulko-ovet
          on auki. Käy sulkemassa!\n {% elif is_state('binary_sensor.takaovi_door',
          'on') %}\n  Takaovi on auki. Käy sulkemassa!\n {% elif is_state('binary_sensor.etuovi_door',
          'on') %}\n  Etuovi on auki. Käy sulkemassa!\n {% endif %}\n"
    - service: notify.mobile_app_iphone_simo
      data:
        title: Kuka unohti oven auki?
        message: "{{ now().strftime('%H:%M:%S %d-%m-%Y') }} - {% if is_state('binary_sensor.takaovi_door',
          'on') and is_state('binary_sensor.etuovi_door', 'on') %}\n  Molemmat ulko-ovet
          on auki. Käy sulkemassa!\n {% elif is_state('binary_sensor.takaovi_door',
          'on') %}\n  Takaovi on auki. Käy sulkemassa!\n {% elif is_state('binary_sensor.etuovi_door',
          'on') %}\n  Etuovi on auki. Käy sulkemassa!\n {% endif %}\n"
