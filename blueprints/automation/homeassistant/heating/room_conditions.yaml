# Name: room_conditions.yaml
# Author: Sebastian Sopola @ https://www.linkedin.com/in/sebastiansopola/
# Description: This file containts the blueprint to provide logic to evaluate room conditions



blueprint:
  name: Evaluate room conditions
  description: Evaluate room conditions. Output will be one of the options; maximum room temperature reached, room temperature at or below minimum or room temperature between limits
  domain: automation
  author: Sebastian Sopola @ https://www.linkedin.com/in/sebastiansopola/
  input:
    room_information:
      name: Room information
      icon: mdi:database
      description: These inputs provide relevant room information
      input:  
        room_name:
          name: Room Name
          description: The name of the room for which the process should be conducted
          selector:
            text:
        room_information:
          name: Room Information Sensor
          description: Sensor providing such as heating schedule, temperature and thermostats
          selector:
            entity:
              filter:
                domain: sensor
        heating_system_interface:
          name: Room Heating System Interface
          description: This is a sensor configured to control heating system program flow
          selector:
            entity:
              filter:
                domain: sensor

mode: restart
max_exceeded: silent

variables:
  room_name: !input room_name
  room_information: !input room_information
  heating_system_interface: !input heating_system_interface

trigger_variables:
  data_collection_process_status: "{{ state_attr(heating_system_interface, 'data_collection_process') }}"

trigger:
  - platform: template
    value_template: >
      {% if data_collection_process_status not in ['unknown', 'undefined', '', None] %}
        {{ data_collection_process_status }}
      {% else %}
        false
      {% endif %}

action:
  # ------------------
  # - INIT VARIABLES -
  # ------------------
  - variables:
      room_temperature: "{{ state_attr(room_information, 'room_temperature') | float }}"
      room_minimum_temperature: "{{ state_attr(heating_system_interface, 'room_minimum_temperature') | float }}"
      room_maximum_temperature: "{{ state_attr(heating_system_interace, 'room_maximum_temperature') | float }}"
      room_target_temperature: "{{ state_attr(heating_system_interface, 'room_target_temperature') | float }}"


  - choose:
      - conditions:
          - condition: template
            value_template: "{{ room_temperature >= room_maximum_temperature }}"
        sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: >
                {{ 'input_boolean.' + room_name | lower + '_maximum_temperature_reached' }}
      - conditions:
          - condition: template
            value_template: "{{ room_temperature <= room_minimum_temperature }}"
        sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: >
                {{ 'input_boolean.' + room_name | lower + '_minimum_temperature_or_below' }}
      - conditions:
          - condition: template
            value_template: "{{ room_temperature < room_maximum_temperature and room_temperature > room_minimum_temperature }}"
        sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: >
                {{ 'input_boolean.' + room_name | lower + '_between_min_max_temperature' }}